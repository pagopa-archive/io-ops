{
  "version": "1.0.0",
  "commands": {
    "hello": {
      "id": "hello",
      "description": "describe the command here",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops hello\nhello world from ./src/hello.ts!\n"
      ],
      "flags": {
        "help": {
          "name": "help",
          "type": "boolean",
          "char": "h",
          "description": "Show CLI help.",
          "allowNo": false
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "description": "name to print",
          "multiple": false
        },
        "force": {
          "name": "force",
          "type": "boolean",
          "char": "f",
          "allowNo": false
        }
      },
      "args": {}
    },
    "migrate-services": {
      "id": "migrate-services",
      "description": "Migrate metadata or logos from github",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops migrate metadata",
        "$ io-ops migrate logo"
      ],
      "flags": {},
      "args": {
        "metadata": {
          "name": "metadata",
          "description": "Migrate metadata or logo from github",
          "required": true,
          "options": [
            "metadata",
            "logo"
          ]
        }
      },
      "ocpHeader": "Ocp-Apim-Subscription-Key"
    },
    "api-services:create": {
      "id": "api-services:create",
      "description": "Create a service",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:create  --json='{ \"authorized_cidrs\": [], \"authorized_recipients\": [], \"department_name\": \"department_test\", \"organization_fiscal_code\": \"12345670013\", \"organization_name\": \"organization_name\", \"service_id\": \"test-api-123\", \"service_name\": \"test_name\", \"is_visible\": false, \"max_allowed_payment_amount\": 0, \"require_secure_channels\": false }'"
      ],
      "flags": {
        "payload": {
          "name": "payload",
          "type": "option",
          "description": "JSON string rapresentation of a service",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "api-services:get-all": {
      "id": "api-services:get-all",
      "description": "Get all services",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:get-all"
      ],
      "flags": {},
      "args": {}
    },
    "api-services:get": {
      "id": "api-services:get",
      "description": "Get the service by serviceId",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:get  SERVICEID"
      ],
      "flags": {},
      "args": {
        "serviceId": {
          "name": "serviceId",
          "description": "id of the service",
          "required": true
        }
      }
    },
    "api-services:keys-regenerate": {
      "id": "api-services:keys-regenerate",
      "description": "Regenerate keys associated to service",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:keys-regenerate  SERVICEID --key_type=PRIMARY_KEY"
      ],
      "flags": {
        "key_type": {
          "name": "key_type",
          "type": "option",
          "description": "JSON string rapresentation of a service",
          "required": true,
          "multiple": false,
          "options": [
            "PRIMARY_KEY",
            "SECONDARY_KEY"
          ]
        }
      },
      "args": {
        "serviceId": {
          "name": "serviceId",
          "description": "id of the service",
          "required": true
        }
      }
    },
    "api-services:keys": {
      "id": "api-services:keys",
      "description": "Get subscription keys associated to service",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:keys SERVICEID"
      ],
      "flags": {},
      "args": {
        "serviceId": {
          "name": "serviceId",
          "description": "id of the service",
          "required": true
        }
      }
    },
    "api-services:logo": {
      "id": "api-services:logo",
      "description": "Update service data with base64 of the logo",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:logo SERVICEID --logo ~/PATH/logo.png"
      ],
      "flags": {
        "logo": {
          "name": "logo",
          "type": "option",
          "description": "Path of logo image to be uploaded",
          "required": true,
          "multiple": false
        }
      },
      "args": {
        "serviceId": {
          "name": "serviceId",
          "description": "id of the service",
          "required": true
        }
      }
    },
    "api-services:update": {
      "id": "api-services:update",
      "description": "Update a service",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:update  --json='{ \"authorized_cidrs\": [], \"authorized_recipients\": [], \"department_name\": \"department_test\", \"organization_fiscal_code\": \"12345670013\", \"organization_name\": \"organization_name\", \"service_id\": \"test-api-123\", \"service_name\": \"test_name\", \"is_visible\": false, \"max_allowed_payment_amount\": 0, \"require_secure_channels\": false }'"
      ],
      "flags": {
        "payload": {
          "name": "payload",
          "type": "option",
          "description": "JSON string rapresentation of a service",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "messages:attributes": {
      "id": "messages:attributes",
      "description": "Update message attributes",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "input": {
          "name": "input",
          "type": "option",
          "char": "i",
          "description": "Input file (CSV, with path as first column)",
          "required": true,
          "multiple": false
        },
        "parallel": {
          "name": "parallel",
          "type": "option",
          "char": "p",
          "description": "Number of parallel workers to run",
          "multiple": false,
          "default": 1
        },
        "isPending": {
          "name": "isPending",
          "type": "option",
          "description": "Set 'isPending' flag",
          "multiple": false,
          "options": [
            "true",
            "false",
            "undefined"
          ]
        }
      },
      "args": {}
    },
    "messages:check-content": {
      "id": "messages:check-content",
      "description": "Checks validity of messages",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "input": {
          "name": "input",
          "type": "option",
          "char": "i",
          "description": "Input file (CSV, with path as first column) - defaults to stdin",
          "multiple": false
        },
        "parallel": {
          "name": "parallel",
          "type": "option",
          "char": "p",
          "description": "Number of parallel workers to run",
          "multiple": false,
          "default": 1
        }
      },
      "args": {}
    },
    "messages:list": {
      "id": "messages:list",
      "description": "List messages for a fiscalCode",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {
        "fiscalCode": {
          "name": "fiscalCode",
          "required": true
        }
      }
    },
    "profiles:delete": {
      "id": "profiles:delete",
      "description": "Delete a profile",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "all": {
          "name": "all",
          "type": "boolean",
          "char": "a",
          "description": "delete items in all containers",
          "required": false,
          "allowNo": false
        },
        "profile": {
          "name": "profile",
          "type": "boolean",
          "char": "p",
          "description": "delete items in profile container",
          "required": false,
          "allowNo": false
        },
        "message": {
          "name": "message",
          "type": "boolean",
          "char": "m",
          "description": "delete items in message container",
          "required": false,
          "allowNo": false
        },
        "notification": {
          "name": "notification",
          "type": "boolean",
          "char": "n",
          "description": "delete items in notification container",
          "required": false,
          "allowNo": false
        },
        "service": {
          "name": "service",
          "type": "boolean",
          "char": "s",
          "description": "delete items in service container",
          "required": false,
          "allowNo": false
        }
      },
      "args": {
        "fiscalCode": {
          "name": "fiscalCode",
          "required": true
        }
      }
    },
    "profiles:exist": {
      "id": "profiles:exist",
      "description": "Returns the input CSV with a new column that is true if a profile for that fiscal code exists.",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "input": {
          "name": "input",
          "type": "option",
          "char": "i",
          "description": "Input file (CSV, with the CF as first column) - defaults to stdin",
          "multiple": false
        },
        "parallel": {
          "name": "parallel",
          "type": "option",
          "char": "p",
          "description": "Number of parallel workers to run",
          "multiple": false,
          "default": 1
        }
      },
      "args": {}
    },
    "profiles:list": {
      "id": "profiles:list",
      "description": "Lists all profiles",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "services:check": {
      "id": "services:check",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "services:details": {
      "id": "services:details",
      "description": "Retrieve service info and metadata from a given service ID",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "serviceId": {
          "name": "serviceId",
          "type": "option",
          "char": "i",
          "description": "The service ID",
          "multiple": false
        }
      },
      "args": {}
    },
    "services:list": {
      "id": "services:list",
      "description": "List all services in csv format",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "flags": {},
      "args": {}
    },
    "users:create": {
      "id": "users:create",
      "description": "Create a new user with a random password in the Active Directory Azure B2C, then create a corresponding user on the API management resource.",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops api-service:create  --json='{ \"email\": \"foobar@example.com\",\"first_name\": \"string\",\"last_name\": \"string\"}'"
      ],
      "flags": {
        "payload": {
          "name": "payload",
          "type": "option",
          "description": "JSON string rapresentation of a user",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "users:get-all": {
      "id": "users:get-all",
      "description": "Get users max 100 per call use cursor for iterating",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:get-all",
        "$ io-ops users:get-all --cursor=100"
      ],
      "flags": {
        "cursor": {
          "name": "cursor",
          "type": "option",
          "description": "Items to skip",
          "required": false,
          "multiple": false
        }
      },
      "args": {}
    },
    "users:get": {
      "id": "users:get",
      "description": "Gets the user information, that is the complete list of subscription and the complete list of groups for the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:get example@example.it"
      ],
      "flags": {},
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        }
      }
    },
    "users:subscription": {
      "id": "users:subscription",
      "description": "Create a Subscription identified by the provided subscription id for the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:subscription  example@example.com SUBSCRIPTIONID --product_name=PRODUCTNAME"
      ],
      "flags": {
        "product_name": {
          "name": "product_name",
          "type": "option",
          "description": "The name of the product",
          "required": true,
          "multiple": false
        }
      },
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        },
        "subscriptionId": {
          "name": "subscriptionId",
          "description": "The id of the Subscription",
          "required": true
        }
      }
    },
    "users:update-groups": {
      "id": "users:update-groups",
      "description": "Update the list of groups (permissions) associated to the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:update-groups  --groups=ApiInfoRead,ApiLimitedMessageWrite,ApiMessageRead"
      ],
      "flags": {
        "groups": {
          "name": "groups",
          "type": "option",
          "description": "A comma separeted list of groups",
          "required": true,
          "multiple": false
        }
      },
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        }
      }
    },
    "users:update_user_token_name": {
      "id": "users:update_user_token_name",
      "description": "Update the Token Name attribute associated to the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:update-token-name"
      ],
      "flags": {},
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        },
        "tokenNameValue": {
          "name": "tokenNameValue",
          "description": "tokenNameValue",
          "required": true
        }
      }
    },
    "users:write-messages": {
      "id": "users:write-messages",
      "description": "Update the list of groups (permissions) associated to the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:write-messages example@example.it enable"
      ],
      "flags": {},
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        },
        "action": {
          "name": "action",
          "description": "action",
          "required": true
        }
      }
    },
    "users:write-services": {
      "id": "users:write-services",
      "description": "Update the list of groups (permissions) associated to the User identified by the provided email",
      "strict": true,
      "pluginName": "io-ops",
      "pluginAlias": "io-ops",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ io-ops users:write-services example@example.it enable"
      ],
      "flags": {},
      "args": {
        "email": {
          "name": "email",
          "description": "email",
          "required": true
        },
        "action": {
          "name": "action",
          "description": "action",
          "required": true
        }
      }
    }
  }
}